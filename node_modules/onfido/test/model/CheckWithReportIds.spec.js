/**
 * Onfido API
 * The Onfido API is used to submit check requests.
 *
 * OpenAPI spec version: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.0.0-beta2
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Onfido);
  }
}(this, function(expect, Onfido) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Onfido.CheckWithReportIds();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CheckWithReportIds', function() {
    it('should create an instance of CheckWithReportIds', function() {
      // uncomment below and update the code to test CheckWithReportIds
      //var instance = new Onfido.CheckWithReportIds();
      //expect(instance).to.be.a(Onfido.CheckWithReportIds);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new Onfido.CheckWithReportIds();
      //expect(instance).to.be();
    });

    it('should have the property created_at (base name: "created_at")', function() {
      // uncomment below and update the code to test the property created_at
      //var instance = new Onfido.CheckWithReportIds();
      //expect(instance).to.be();
    });

    it('should have the property href (base name: "href")', function() {
      // uncomment below and update the code to test the property href
      //var instance = new Onfido.CheckWithReportIds();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new Onfido.CheckWithReportIds();
      //expect(instance).to.be();
    });

    it('should have the property result (base name: "result")', function() {
      // uncomment below and update the code to test the property result
      //var instance = new Onfido.CheckWithReportIds();
      //expect(instance).to.be();
    });

    it('should have the property download_uri (base name: "download_uri")', function() {
      // uncomment below and update the code to test the property download_uri
      //var instance = new Onfido.CheckWithReportIds();
      //expect(instance).to.be();
    });

    it('should have the property form_uri (base name: "form_uri")', function() {
      // uncomment below and update the code to test the property form_uri
      //var instance = new Onfido.CheckWithReportIds();
      //expect(instance).to.be();
    });

    it('should have the property redirect_uri (base name: "redirect_uri")', function() {
      // uncomment below and update the code to test the property redirect_uri
      //var instance = new Onfido.CheckWithReportIds();
      //expect(instance).to.be();
    });

    it('should have the property results_uri (base name: "results_uri")', function() {
      // uncomment below and update the code to test the property results_uri
      //var instance = new Onfido.CheckWithReportIds();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new Onfido.CheckWithReportIds();
      //expect(instance).to.be();
    });

    it('should have the property report_type_groups (base name: "report_type_groups")', function() {
      // uncomment below and update the code to test the property report_type_groups
      //var instance = new Onfido.CheckWithReportIds();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new Onfido.CheckWithReportIds();
      //expect(instance).to.be();
    });

    it('should have the property suppress_form_emails (base name: "suppress_form_emails")', function() {
      // uncomment below and update the code to test the property suppress_form_emails
      //var instance = new Onfido.CheckWithReportIds();
      //expect(instance).to.be();
    });

    it('should have the property charge_applicant_for_check (base name: "charge_applicant_for_check")', function() {
      // uncomment below and update the code to test the property charge_applicant_for_check
      //var instance = new Onfido.CheckWithReportIds();
      //expect(instance).to.be();
    });

    it('should have the property brand_id (base name: "brand_id")', function() {
      // uncomment below and update the code to test the property brand_id
      //var instance = new Onfido.CheckWithReportIds();
      //expect(instance).to.be();
    });

    it('should have the property asynchronous (base name: "asynchronous")', function() {
      // uncomment below and update the code to test the property asynchronous
      //var instance = new Onfido.CheckWithReportIds();
      //expect(instance).to.be();
    });

    it('should have the property reports (base name: "reports")', function() {
      // uncomment below and update the code to test the property reports
      //var instance = new Onfido.CheckWithReportIds();
      //expect(instance).to.be();
    });

  });

}));
